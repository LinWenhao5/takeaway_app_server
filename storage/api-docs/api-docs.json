{
    "openapi": "3.0.0",
    "info": {
        "title": "Takeaway App API",
        "description": "API documentation for the Takeaway App",
        "contact": {
            "email": "linwenhao5@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/addresses": {
            "get": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Get all addresses for the authenticated customer",
                "operationId": "9c9db908a39758eb6b4157138546d088",
                "responses": {
                    "200": {
                        "description": "List of addresses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "addresses": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "张三"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "0612345678"
                                                    },
                                                    "street": {
                                                        "type": "string",
                                                        "example": "Wagenweg"
                                                    },
                                                    "house_number": {
                                                        "type": "string",
                                                        "example": "12B"
                                                    },
                                                    "postcode": {
                                                        "type": "string",
                                                        "example": "1442CE"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "example": "Purmerend"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "example": "Netherlands"
                                                    },
                                                    "customer_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-07-01T00:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-07-01T00:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Failed to get addresses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to get addresses"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Add a new address for the authenticated customer",
                "operationId": "0641a0f33b3bb27ab067b144573b0018",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "phone",
                                    "street",
                                    "house_number",
                                    "postcode",
                                    "city",
                                    "country"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Recipient name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "phone": {
                                        "description": "Dutch phone number",
                                        "type": "string",
                                        "example": "0612345678"
                                    },
                                    "street": {
                                        "type": "string",
                                        "example": "Wagenweg"
                                    },
                                    "house_number": {
                                        "type": "string",
                                        "example": "12B"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "example": "1442CE"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Purmerend"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Netherlands"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "address": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "张三"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "0612345678"
                                                },
                                                "street": {
                                                    "type": "string",
                                                    "example": "Wagenweg"
                                                },
                                                "house_number": {
                                                    "type": "string",
                                                    "example": "12B"
                                                },
                                                "postcode": {
                                                    "type": "string",
                                                    "example": "1442CE"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Purmerend"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "Netherlands"
                                                },
                                                "customer_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-07-01T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-07-01T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to add address",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to add address"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/addresses/{id}": {
            "put": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Update an address",
                "operationId": "70b9063c88f41314ac9e411d51d3d027",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Address ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "phone",
                                    "street",
                                    "house_number",
                                    "postcode",
                                    "city",
                                    "country"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "street": {
                                        "type": "string"
                                    },
                                    "house_number": {
                                        "type": "string"
                                    },
                                    "postcode": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "address": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Delete an address",
                "operationId": "c18ac1159e1d7651804e5b15ab25ff24",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Address ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/business-hours/available-times": {
            "get": {
                "tags": [
                    "BusinessHour"
                ],
                "summary": "Get available booking time slots for today",
                "operationId": "64f2e6050329be893aec00038cf8b1c8",
                "parameters": [
                    {
                        "name": "order_type",
                        "in": "query",
                        "description": "Order type: 'delivery' for delivery (45 min interval), 'pickup' for self-pickup (30 min interval)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "delivery",
                            "enum": [
                                "delivery",
                                "pickup"
                            ]
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date for available times, format: Y-m-d. Default is today.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-08-05"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with available time slots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "date": {
                                            "type": "string",
                                            "example": "2025-08-05"
                                        },
                                        "times": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "10:00"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get available time slots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to get available time slots."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Some error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Retrieve the cart content",
                "operationId": "a9f015810b5563f82ab2045f6440a4ae",
                "responses": {
                    "200": {
                        "description": "Cart retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart retrieved successfully."
                                        },
                                        "cart": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Product ID",
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "name": {
                                                        "description": "Product name",
                                                        "type": "string",
                                                        "example": "Delicious Sushi"
                                                    },
                                                    "description": {
                                                        "description": "Product description",
                                                        "type": "string",
                                                        "example": "Fresh and tasty sushi."
                                                    },
                                                    "price": {
                                                        "description": "Product price",
                                                        "type": "string",
                                                        "example": "12.50"
                                                    },
                                                    "image": {
                                                        "description": "Product image URL",
                                                        "type": "string",
                                                        "example": "https://example.com/images/sushi.jpg"
                                                    },
                                                    "quantity": {
                                                        "description": "Quantity of the product",
                                                        "type": "string",
                                                        "example": "3"
                                                    },
                                                    "subtotal": {
                                                        "description": "Subtotal for the product",
                                                        "type": "string",
                                                        "example": "37.50"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "total_price": {
                                            "description": "Total price of all products in the cart",
                                            "type": "string",
                                            "example": "150.00"
                                        },
                                        "total_quantity": {
                                            "description": "Total quantity of all products in the cart",
                                            "type": "string",
                                            "example": "12"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve cart."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add a product to the cart",
                "operationId": "0823643e182ebe1a6d2783dcf2a71e23",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "description": "ID of the product to add",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "description": "Quantity of the product",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product added to cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to cart successfully."
                                        },
                                        "customerId": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "productId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to add product to cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to add product to cart."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Some error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/remove": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove a product from the cart",
                "operationId": "0e1bba29dac9897e7093eb03ffe6c4cb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "description": "ID of the product to remove",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product removed from cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product removed from cart successfully."
                                        },
                                        "customerId": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "productId": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to remove product from cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to remove product from cart."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Some error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/remove-quantity": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove a specific quantity of a product from the cart",
                "operationId": "a8a7f7818f94e05806b182c0abe93a48",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "description": "ID of the product to remove",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "description": "Quantity to remove",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product quantity removed from cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product quantity removed from cart successfully."
                                        },
                                        "customerId": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "productId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to remove product quantity from cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to remove product quantity from cart."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Some error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/customer/username": {
            "get": {
                "tags": [
                    "Customer Account"
                ],
                "summary": "Get the current customer's username",
                "operationId": "14641d8edd550b1d9f180f2687f80f52",
                "responses": {
                    "200": {
                        "description": "Username fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "username": {
                                            "type": "string",
                                            "example": "SushiLover"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get username",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to get username."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/customer/register": {
            "post": {
                "tags": [
                    "Customer Authentication"
                ],
                "summary": "Register a new customer",
                "operationId": "0e511cae3f862b478f6e1d3504955436",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Customer's name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Customer's email",
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "description": "Customer's password",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "captcha": {
                                        "description": "Captcha code sent to the email",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer registered successfully!"
                                        },
                                        "customer": {
                                            "description": "Customer details",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid captcha",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid captcha."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to register customer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to register customer."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/login": {
            "post": {
                "tags": [
                    "Customer Authentication"
                ],
                "summary": "Login a customer",
                "operationId": "d759a66d56bf3c0487cb6feb118c7596",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Customer's email",
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "description": "Customer's password",
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful!"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to login."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/generate-captcha": {
            "post": {
                "tags": [
                    "Customer Authentication"
                ],
                "summary": "Generate a captcha code for email verification",
                "operationId": "d75b9a89e0ed2c294183f77e278f7080",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Customer's email",
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Captcha sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Captcha sent successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to generate captcha",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to generate captcha."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get all orders for the authenticated customer (paginated)",
                "description": "Get all orders for the authenticated customer (with pagination).",
                "operationId": "6bbf3789d3d27e09b6172c3c446c6725",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of orders per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "orders": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order and get payment URL",
                "description": "Create a new order and return payment URL.",
                "operationId": "1523fb9aa00e54e4cde18ca6c3b4a06d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "order_type",
                                    "reserve_time"
                                ],
                                "properties": {
                                    "order_type": {
                                        "description": "Order type: delivery or pickup",
                                        "type": "string",
                                        "enum": [
                                            "delivery",
                                            "pickup"
                                        ]
                                    },
                                    "address_id": {
                                        "description": "Required if order_type is delivery. Address ID for delivery orders",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "reserve_time": {
                                        "description": "Reserve time for delivery or pickup",
                                        "type": "string",
                                        "example": "18:30"
                                    },
                                    "platform": {
                                        "description": "Platform (optional)",
                                        "type": "string",
                                        "example": "web"
                                    },
                                    "host": {
                                        "description": "Request host (optional)",
                                        "type": "string",
                                        "example": "example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "payment_url": {
                                            "type": "string",
                                            "example": "https://www.mollie.com/paymentscreen/example"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{orderId}/repay": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Repay an unpaid order and get a new payment URL",
                "description": "Repay an unpaid order and get a new payment URL.",
                "operationId": "e173b1ee52be777c41a52d93cddd2477",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment URL generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "payment_url": {
                                            "type": "string",
                                            "example": "https://www.mollie.com/paymentscreen/example"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order already paid or not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{orderId}/status": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order status by ID",
                "description": "Get order status by ID.",
                "operationId": "7babbd508938732b21edb462ce44a9ce",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "paid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{orderId}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order details by ID",
                "description": "Get order details by ID.",
                "operationId": "988d8f91e8a15f58a52454cdc3e9cdf6",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "order": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{orderId}/reserve-time": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update reserve time for an unpaid order",
                "description": "Update reserve time for an unpaid order.",
                "operationId": "60ffa6bdcc009a95fbc77b3fe7138f45",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reserve_time"
                                ],
                                "properties": {
                                    "reserve_time": {
                                        "description": "New reserve time, format: Y-m-d H:i",
                                        "type": "string",
                                        "example": "2025-08-05 18:30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reserve time updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "reserve_time": {
                                            "type": "string",
                                            "example": "2025-08-05 18:30"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve all products",
                "operationId": "a7dd8e0e690e902ea7e064c8003319e6",
                "responses": {
                    "200": {
                        "description": "List of all products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve products."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve a specific product",
                "operationId": "aa66c63d08ebc80d2b68d59ec7633572",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to fetch product."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/search": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Search products by keyword",
                "operationId": "f226145c75e34247061b4d45c484676a",
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword to search for products",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products matching the keyword",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Keyword is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Keyword is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to search products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to search products."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product-categories": {
            "get": {
                "tags": [
                    "Product Categories"
                ],
                "summary": "Retrieve all product categories",
                "operationId": "8ecc3edb44f9714c07d98056365c0542",
                "responses": {
                    "200": {
                        "description": "List of all product categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve product categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve product categories."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product-categories/full": {
            "get": {
                "tags": [
                    "Product Categories"
                ],
                "summary": "Retrieve product categories with their products",
                "operationId": "1f0c2b78fb588d833c3be0200018af43",
                "responses": {
                    "200": {
                        "description": "List of product categories with their products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve categories with products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve categories with products."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/store": {
            "get": {
                "tags": [
                    "Store"
                ],
                "summary": "Get the store information",
                "operationId": "0bed9813c0bf2b3daab9f0b6af14a798",
                "responses": {
                    "200": {
                        "description": "Store information returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "phone": {
                                            "type": "string"
                                        },
                                        "street": {
                                            "type": "string"
                                        },
                                        "house_number": {
                                            "type": "string"
                                        },
                                        "postcode": {
                                            "type": "string"
                                        },
                                        "city": {
                                            "type": "string"
                                        },
                                        "country": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No store found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter your Bearer token:",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Addresses",
            "description": "Addresses"
        },
        {
            "name": "BusinessHour",
            "description": "BusinessHour"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Customer Account",
            "description": "Customer Account"
        },
        {
            "name": "Customer Authentication",
            "description": "Customer Authentication"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Product Categories",
            "description": "Product Categories"
        },
        {
            "name": "Store",
            "description": "Store"
        }
    ]
}